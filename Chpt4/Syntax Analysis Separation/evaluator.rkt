#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 0
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 875 0 26 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 19 3 23 #"\"eval-data-structs.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 17 #"\"syntax-spec.rkt\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 14 3 4 #"eval"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"eval"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 16 #"self-evaluating?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 23 #"analyze-self-evaluating"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 7 #"quoted?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"analyze-quoted"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"analyze-variable"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 11 #"assignment?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"analyze-assignment"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 15 3 11 #"definition?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"analyze-definition"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 3 #"if?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"analyze-if"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 7 #"lambda?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 14 #"analyze-lambda"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 15 3 6 #"begin?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 16 #"analyze-sequence"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 13 #"begin-actions"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 5 #"cond?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"cond->if"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 4 #"let?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"let->combination"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 12 #"application?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 19 #"analyze-application"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 19 3 32 #"\"Unknown expression type - EVAL\""
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7        1393 4           0 0           0 231 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"eval"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 16 #"self-evaluating?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 9 #"variable?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"lookup-variable-value"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 7 #"quoted?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"text-of-quotation"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 11 #"assignment?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-assignment"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 15 3 11 #"definition?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-definition"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 3 #"if?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"eval-if"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 7 #"lambda?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-procedure"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"lambda-parameters"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 11 #"lambda-body"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 25 #"                         "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 15 3 6 #"begin?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 13 #"eval-sequence"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 13 #"begin-actions"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 5 #"cond?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"eval"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"cond->if"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 4 #"let?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"eval"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"let->combination"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 12 #"application?"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"eval"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"operator"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 14 #"list-of-values"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"operands"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 2 3 1 #" "
0 0 19 3 32 #"\"Unknown expression type - EVAL\""
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 4 #"))))"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 23 #"analyze-self-evaluating"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"analyze-quoted"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"qval"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"text-of-quotation"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"qval"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"analyze-variable"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"lookup-variable-value"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"analyze-assignment"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"assignment-variable"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"vproc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"assignment-value"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 19 #"set-variable-value!"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"vproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"analyze-definition"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 19 #"definition-variable"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"vproc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 16 #"definition-value"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 16 #"define-variable!"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"vproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"analyze-if"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"pproc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"if-predicate"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"cproc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"if-consequent"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"aproc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"if-alternative"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"true?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"pproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 5 #"cproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 5 #"aproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"analyze-lambda"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"lambda-parameters"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"bproc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"analyze-sequence"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"lambda-body"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-procedure"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 5 #"bproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"analyze-sequence"
0 0 4 3 1 #" "
0 0 14 3 4 #"exps"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"sequentially"
0 0 4 3 1 #" "
0 0 14 3 5 #"proc1"
0 0 4 3 1 #" "
0 0 14 3 5 #"proc2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"proc1"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"proc2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 14 3 10 #"first-proc"
0 0 4 3 1 #" "
0 0 14 3 10 #"rest-procs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 10 #"rest-procs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 10 #"first-proc"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"sequentially"
0 0 4 3 1 #" "
0 0 14 3 10 #"first-proc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 10 #"rest-procs"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 10 #"rest-procs"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"procs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 14 3 4 #"exps"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"procs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 19 3 26 #"\"Empty sequence - ANALYZE\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"procs"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"procs"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"analyze-application"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"fproc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"operator"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 6 #"aprocs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 7 #"analyze"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"operands"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 19 #"execute-application"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"fproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"aproc"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"aproc"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 14 3 6 #"aprocs"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"execute-application"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 20 #"primitive-procedure?"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 25 #"apply-primitive-procedure"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 19 #"compound-procedure?"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"(("
0 0 14 3 14 #"procedure-body"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 18 #"extend-environment"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"procedure-parameters"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 14 3 4 #"args"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 22 3 1 #"("
0 0 14 3 21 #"procedure-environment"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 14 3 4 #"proc"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 19 3 46 #"\"Unknown procedure type - EXECTUE-APPLICATION\""
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 14 3 4 #"proc"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0           0
