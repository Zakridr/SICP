#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 0
1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 827 0 26 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-table"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 19 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 11 #"local-table"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"mcons"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"*table"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 5 #"())))"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"assoc"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 14 3 7 #"records"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 7 #"records"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 7 #"records"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 7 #"records"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"assoc"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 4 3 1 #" "
0 0 14 3 7 #"records"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 14 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 17 3 24 #"; finder returns a list:"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 17 3 31 #"; bool last-pair remaining-keys"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 17 3 64
#"; where bool is true if we found a match for all keys, false o/w"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 17 3 41 #"; last-pair is the last (key, value) pair"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 17 3 85
(
 #"; remaining-keys is the list of keys, the first of which we couldn't"
 #" find a match for"
) 0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 17 3 10 #";  or null"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"finder"
0 0 19 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 7         223 4           0 0           0 36 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"in-finder"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 2 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"mpair?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 2 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 2 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 1 #")"
0           0 0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 19 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 19 3 1 #" "
0 0 14 3 4 #"true"
0 0 19 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 17 3 12 #";           "
0 0 17 3 2 #"(("
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 5 #"pair?"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 4 #"mcdr"
0 0 17 3 1 #" "
0 0 17 3 7 #"key-val"
0 0 17 3 3 #")))"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 11 #"key-list)))"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";             "
0 0 17 3 1 #"("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 5 #"false"
0 0 17 3 1 #" "
0 0 17 3 7 #"key-val"
0 0 17 3 1 #" "
0 0 17 3 10 #"key-list))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"mpair?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 4 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 4 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 4 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 19 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 6 #"result"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"assoc"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 19 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 19 3 1 #" "
0 0 14 3 6 #"result"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"finder"
0 0 19 3 1 #" "
0 0 14 3 6 #"result"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 19 3 1 #" "
0 0 14 3 5 #"false"
0 0 19 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 6 #"))))))"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 19 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"result"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"finder"
0 0 19 3 1 #" "
0 0 14 3 11 #"local-table"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 19 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 19 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 12 #"            "
0 0 14 3 5 #"false"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 19 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"iter-construct"
0 0 19 3 1 #" "
0 0 14 3 4 #"keys"
0 0 19 3 1 #" "
0 0 14 3 3 #"val"
0 0 19 3 1 #" "
0 0 14 3 7 #"current"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 19 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcdr!"
0 0 19 3 1 #" "
0 0 14 3 7 #"current"
0 0 19 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 19 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"new"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"mcons"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 19 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 5 #"())))"
0 0 19 29 1 #"\n"
0 0 19 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcdr!"
0 0 19 3 1 #" "
0 0 14 3 7 #"current"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"mcons"
0 0 19 3 1 #" "
0 0 14 3 3 #"new"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 19 3 1 #" "
0 0 14 3 7 #"current"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 14 #"iter-construct"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 19 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 3 #"val"
0 0 19 3 1 #" "
0 0 14 3 3 #"new"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 19 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"results"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"finder"
0 0 19 3 1 #" "
0 0 14 3 11 #"local-table"
0 0 19 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 19 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"found?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 19 3 1 #" "
0 0 14 3 7 #"results"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 9 #"last-pair"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 19 3 1 #" "
0 0 14 3 7 #"results"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 14 #"remaining-keys"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 19 3 1 #" "
0 0 14 3 7 #"results"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 17 3 83
(
 #"; logic to handle case where we are replacing a simple key-val pair "
 #"with a subtable"
) 0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"mpair?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 4 3 1 #" "
0 0 14 3 9 #"last-pair"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcdr!"
0 0 4 3 1 #" "
0 0 14 3 9 #"last-pair"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 14 #"iter-construct"
0 0 19 3 1 #" "
0 0 14 3 14 #"remaining-keys"
0 0 19 3 1 #" "
0 0 14 3 5 #"value"
0 0 19 3 1 #" "
0 0 14 3 9 #"last-pair"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"dispatch"
0 0 19 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 19 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 19 3 1 #" "
0 0 14 3 1 #"m"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"lookup-proc"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 19 3 1 #" "
0 0 14 3 1 #"m"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 12 #"insert-proc!"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 7 #"insert!"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 19 3 1 #" "
0 0 14 3 1 #"m"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"table"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 11 #"local-table"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 19 3 2 #" \""
0 0 19 3 7 #"Unknown"
0 0 19 3 1 #" "
0 0 19 3 9 #"operation"
0 0 19 3 1 #" "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 6 #"TABLE\""
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 8 #"dispatch"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 24 3 1 #" "
0 0 14 3 5 #"table"
0 0 24 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 5 #"table"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 12 #"insert-proc!"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 5 #"table"
0 0 24 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 5 #"table"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"lookup-proc"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 8 #"key-list"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-table"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 17 #"done-making-table"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 17 #"done-inserting-b2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 17 3 1 #" "
0 0 14 3 1 #"t"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 17 3 1 #" "
0 0 14 3 1 #"t"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 17 3 1 #" "
0 0 14 3 1 #"t"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"matrix"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 17 3 1 #" "
0 0 14 3 1 #"t"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"A"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 17 3 1 #" "
0 0 14 3 1 #"t"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"A"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"A"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"B"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 3 #")))"
0           0
